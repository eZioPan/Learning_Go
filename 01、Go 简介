Golang -- Go 语言的特点

1、 并发
	Go 语言让含糊容易成为轻量的线程
	这些线程被称为 goroutines

2、 Channel
	goroutines 之间的通信通过 channel 达成

3、 垃圾回收
	Go 带有垃圾回收机制，也就是 Go 编译的程序自带 runtime

4、 自带代码格式化工具
	Go 自带 gofmt 工具，可以格式化代码，让它符合官方指定的标准

5、 类型后置
	在声明变量的时候，变量名处在变量类型的前面
	这样避免了很多嵌套时的语句混淆

6、 严格的类型
	Go 有着严格的类型限定
	类型之间必须显式转换

7、 UTF-8 支持
	Go 语言的字符串和代码本身都是 UTF-8 的
	也就是字符串和代码都可以书写 UTF-8 支持的字符



Hello,world

新建 helloworld.go 文件
写入以下内容

package main

import "fmt"	//格式化 IO

/* 打印 */

func main() {
	fmt.Printf("Hello,世界！")
}


注意
1、 文件的首行必然以 package xxx 开头
	在 Go 中，每个源码文件都是一个“包”
	每个包必须在第一行用 package xxx 表明包的名称

1.1 一个程序的入口，也就是主程序
	必须以 main 作为包的名称

2、 默认情况下
	Go 不需要在行尾写分号 ;
	除非需要将多个语句放在同一行书写

2、 import 语句用于导入其他包
	fmt 包是 Go 自带的格式化 IO 包
	用于提供可格式化的输出等功能

2.1 import 的包必须被调用过
	否则就会在编译时报错

3、 一行中 若出现 //
	则后面的内容均为注释

4、 注释也可以以 /* 开头
	以 */ 结尾

5、 Go 用函数组织程序
	用 func 语句声明一个函数

5.1 每个主程序的入口必须是 main 函数
	这个函数不接受任何的传入值

6、 所有的左括号不可以另起一行写
	这是由于 Go 是自动添加分号的
	若另起一行写左括号
	Go 会在上一行加上分号
	而断开代码块，产生错误



使用 Go 的两个重要的环境变量

$GOROOT
这个环境变量定义了 Go 的安装路径目录
若是默认安装，可不定义

$GOPATH
这个环境变量定义了 编写代码 的工作路径
需要指定，以方便工作



编译 Go 程序
命令行输入
go build helloworld.go
接着运行
./helloworld
