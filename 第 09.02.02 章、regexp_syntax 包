regexp/syntax 包

定义和处理 正则表达式 本身的语法



正则表达式语法



单一字符：


.				任何字符，可能包含 newline（flag s=true）
[xyz]			包含指定字符中的某一个
[^xyz]			不包含指定字符中的任何一个
\d				Perl 定义的字符
\D				不含任何 Perl 定义的字符
[[:alpha:]]		ASCII 定义的字符
[[:^alpha:]]	不含 ASCII 定义的字符
\pN				单个 Unicode 字符
				参见 http://www.regular-expressions.info/unicode.html Unicode Categories 部分
\p{Greek}		指定语言下的单个 Unicode 字符
				参见 http://www.regular-expressions.info/unicode.html Unicode Script 部分
				中文为 {Han}
\PN				不含 Unicode 字符
\P{Greek}		不含指定语言下的 Unicode 字符


复合字符串：

xy				x 后跟随 y
x|y				x 或 y（优先匹配 x）


重复字符：

x*				0 个或多个 x，优先匹配最多数量
x+				1 个或多个 x，优先匹配最多数量
x?				0 个或 1 个 x，优先匹配 1 个
x{n,m}			重复 n 至 m 个 x，优先匹配最多数量
x{n,}			至少重复 n 个 x，优先匹配最多数量
x{n}			重复且仅重复 n 个 x
x*?				0 个或多个 x，优先匹配最少数量
x+?				1 个或多个 x，优先匹配最少数量
x??				0 个或 1 个 x，优先匹配 0 个
x{n,m}?			重复 n 至 m 个 x，优先匹配最少数量
x{n,}?			至少重复 n 个 x，优先匹配最少数量
x{n}?			重复且仅重复 n 个 x

#### 由于某些原因 x{n,m} x{n,} x{n} 最多仅能匹配上 1000 个重复


打组：

(re)			具有编号的捕获组（次级匹配）
(?P<name>re)	具有编号和名称的捕获组（次级匹配）
(?:re)			非捕获组
(?flages)		为当前组设置 flags，本身为非捕获组
(?flags:re)		在执行 re 时，设置的 flags，本身为非捕获组

flags 的设置可以是 xyz （全含） -xyz （全不含） xy-z （含 xy 不含 z）：

i				忽略大小写（默认为 false）
m				多行模式： ^ 和 $ 除了匹配 文本起止，还匹配每行的开始和结尾（默认为 false）
s				让 . 可以匹配 \n （默认为 false）
U				非贪婪模式，也就是反转 x* 和 x*? ， x+ 和 x+? 等的含义


空字符串：

^				文本开始处，或者行开始处（flag m=true）
$				文本结束处，或者行结束处（flag m=true）
\A				文本开始处
\b				ASCII 字符串边界（一侧是 \w，另一侧是 \W、\A 或者 \z）
\B				非 ASCII 字符串边界
\z				文本结尾


转义字符：

\a				响铃符（== \007）
\f				换页符(== \014)
\t				水平制表符（== \011）
\n				换行符（== \012）
\r				回车符（== \015）
\v				竖直换行符（== \013）
\*				表示一个星号 * 本身
\123			八进制数（最多三位）
\x7F			十六进制数（固定两位）
\x{10FFFF}		十六进制数
\Q...\E			期间字符全部解读为普通字符串
