strings 包用于字符串的操作
【注意包名是复数的】



-------- 第一大类 匹配与定位 --------


strings.HasPrefix(str, pre string) bool
strings.HasSufix(str, su string) bool
判断一个一个字符串 str 是否以 字符串 pre/su 作为开头/结尾


strings.Contains(str, substr string) bool
判断一个字符串 str 是否包含一个字符串 substr

strings.ContainsAny(str, chars string) bool
判断一个字符串 str 是否包含字符串 chars 中的一个或多个字符

strings.ConstainsRune(str string, r rune) bool
判断一个字符串 str 中，是否包含一个 Unicode 字符 r

strings.Count(str, sep string) int
判断一个字符串 str 中，出现了多少个字符串 sep
若 seq 为空，则返回 unicode点数+1 的数据


strings.Index(s, sep string) int
string.IndexAny(s, chars string) int
strings.IndexByte(s string, c byte) int
string.IndexRune(s string, r rune) int
string.IndexFunc(s string, f func(rune) bool) int
在字符串 s 中寻找指定的 字符串 sep
若寻找成功返回第一个找到的位置的索引
若不成功则返回 -1
具体函数作用对象与用法仿照上文函数

strings.LastIndex(s, sep string) int
strings.LastIndexAny(s, chars string) int
strings.LastIndexByte(s string, c byte) int
strings.LastIndexFunc(s string, f func(rune) bool) int
同上，查找最后一个匹配上的
注意没有 LastIndexRune 这个函数



-------- 第二大类 字符串的切片与拼接 --------


strings.Fields(str string) []string
通过 unicode.IsSpace 判断出的空白字符
将文本切片为不含空白字符的 字符串 slice

strings.FieldsFunc(s string, f func(rune) bool) []string
自定义切片法则函数 f func(rune) bool
将文本切片为不含 rune 字符的 字符串 slice


strings.Split(s, sep string) []string
strings.SplitN(s, sep string, n int) []string
将字符串切片，与 strings.Field 不同的是，
若有连续的 sep 字符串出现
则仅将第一个 sep 省略
其他的 sep 以空字符的形式出现在 输出的 slice 中
n 表示将返回的切片的长度
n = 0 表示返回的是 nil
n > 0 表示返回 n 个切片，若 n 小于需要切片的个数，则最后一个切片为剩余所有的字符串
n < 0 表示使用全部的切片

strings.SplitAfter(s, sep string) []string
strings.SplitAfterN(s, sep string) []string
向后切片
切口的位置在 sep 与后一个字符之间
sep 与前一个字符串一同输出为同一个字符串


strings.Join(a []string, sep string) string
用字符串 sep 作为间隔，将字符串 slice a 连接为一个字符串



-------- 第三大类 字符的大小写转化 --------


strings.Title(s string) string
将每个单词的首字母转换为标题大小写

strings.ToTitle(s string) string
将每个单词的每个字母转换为标题大小写

strings.ToTitleSpecial(c unicode.SpecialCase, s string) string
特定语言环境下的大写转换

strings.ToLower(s string) string
strings.ToLowerSpecial(c unicode.SpecialCase, s string) string
strings.ToUpper(s string) string
strings.ToUpperSpecial(c unicode.SpecialCase, s string) string
全字符转换为大写/小写



------- 第四大类 字符的替换、映射和重复 --------


strings.Map(mapping func(rune) rune, s string) string
定义一个映射的规则，重映射一组字符串

strings.Repeat(s string, count int) string
将一个字符串重复 count 次，并输出

strings.Replace(s old, new string, n int) string
将字符串中的指定字符串替换为新的字符串，且仅替换前 n 个
若 n<0，则忽略个数的限制



-------- 第五大类 字符的修剪 --------


strings.Trim(s, cutset string) string
若字符串 s 的首尾，含有 字符串 cutset 中的字符
则全部移除

strings.TrimFunc(s string, f func(rune) bool) string
自定义首位字符移除判断方式

strings.TrimLeft(s, cutset string) string
strings.TrimLeftFunc(s string, f func(rune) bool) string
strings.TrimRight(s, cutset string) string
strings.TrimRightFunc(s string, f func(rune) bool) string
同上，分别为 左切、自定义规则左切、右切、自定义规则右切

strings.TrimSpace(s, cutset string) string
移除首尾空白字符

strings.TrimPrefix(s, prefix string) string
strings.TrimSuffix(s, prefix string) string
匹配并移除首/尾指定的字符串
