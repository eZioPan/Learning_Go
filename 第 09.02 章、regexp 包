regexp 用于正则表达式的匹配

所有用于匹配的字符均为 UTF-8 编码的码点



Match(pattern string, b []byte) (matched bool, err error)
最基础的 字节流 正则匹配，返回是否匹配成功
pattern 为以字符串表示的正则匹配表达式
b 为待匹配字节流


MatchReader(pattern string, r io.RuneReader) (mathced bool, err error)
最基础的 Rune 正则匹配，返回是否匹配成功
pattern 为以字符串表示的正则匹配表达式
r 为满足了 io.RuneReader 的变量


MatchString(pattern string, s string) (matched bool, err error)
最基础的 字符串 正则匹配，返回是否匹配成功
pattern 为以字符串表示的正则匹配表达式
s 为待匹配字符串


QuoteMeta(s string) string
将输入的字符串作为 raw string
全部转义为不用反引号即可表示的字符串
EG.
regexp.QuoteMeta(`^(\n)`)
返回 "\^\(\\n\)"



Regexp struct 类型
Regexp 类型就是编译过的（compiled）正则表达式


Compile(expr string) (*Regexp, error)
输入一个 string，生成一个正则表达式类型变量
当匹配字符时，遵循 leftmost-first 匹配，也就是
从左至右，匹配第一个能匹配上的开头，接着匹配上第一个能够匹配结尾的部分


CompilePOSIX(expr string) (*Regexp, error)
输入一个 string，生成一个正则表达式类型变量
当匹配字符时，遵循 leftmost-longest 匹配，也就是
从左至右，匹配第一个能匹配上的开头，接着匹配上最后一个能够匹配结尾的部分


MustCompile(str string) *Regexp
MustCompilePOSIX(str string) *Regexp
正则表达式类型必须编译成功，否则会立刻 panic


(re *Regexp) Copy() *Regexp
完全拷贝一个 Regexp
当使用多个 goroutine 的时候，可以防止锁竞争
